---

# This utility aims to determine if there is some existing Postgres version in use or not.
# If there is, it also tries to detect the container image that corresponds to that version.
#
# This utility is intentionally not in `tasks/util`, because if it were, it wouldn't be possible
# to include it in other roles via the include_role module: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_role_module.html

- name: Initialize Postgres version determination variables (default to empty)
  ansible.builtin.set_fact:
    postgis_detection_pg_version_path: "{{ postgis_data_path }}/PG_VERSION"
    postgis_detected_existing: false
    postgis_detected_version: ""
    postgis_detected_version_corresponding_docker_image: ""

- name: Determine existing Postgres version (check PG_VERSION file)
  ansible.builtin.stat:
    path: "{{ postgis_detection_pg_version_path }}"
  register: result_pg_version_stat

- ansible.builtin.set_fact:
    postgis_detected_existing: true
  when: "result_pg_version_stat.stat.exists"

- name: Determine existing Postgres version (read PG_VERSION file)
  ansible.builtin.slurp:
    src: "{{ postgis_detection_pg_version_path }}"
  register: result_pg_version
  when: postgis_detected_existing | bool

- name: Determine existing Postgres version (make sense of PG_VERSION file)
  ansible.builtin.set_fact:
    postgis_detected_version: "{{ result_pg_version['content'] | b64decode | replace('\n', '') }}"
  when: postgis_detected_existing | bool

- name: Determine corresponding container image to detected version (assume default of latest)
  ansible.builtin.set_fact:
    postgis_detected_version_corresponding_docker_image: "{{ postgis_container_image_latest }}"
  when: "postgis_detected_version != ''"

- name: Determine corresponding container image to detected version (use 15.x, if detected)
  ansible.builtin.set_fact:
    postgis_detected_version_corresponding_docker_image: "{{ postgis_container_image_v15 }}"
  when: "postgis_detected_version == '15' or postgis_detected_version.startswith('15.')"
